package creditcard.views;
/*
		A basic implementation of the JDialog class.
*/


import creditcard.models.Copper;
import creditcard.models.CreditCardType;
import creditcard.models.Gold;
import creditcard.models.Silver;
import framework.views.FinCoView;

import javax.swing.*;
import java.awt.*;

public class JDialog_AddPersonalCCAccount extends JDialog {
    private ICCardViewController controller;
	private FinCoView parent;

	JLabel nameLb = new JLabel();
	JLabel streetLb = new JLabel();
	JLabel cityLb = new JLabel();
	JLabel stateLb = new JLabel();
	JLabel zipLb = new JLabel();
	JLabel ccNumberLb = new JLabel();
	JLabel expiryDateLb = new JLabel();
	JLabel emailLb = new JLabel();
	JLabel birthDateLb = new JLabel();

	JTextField nameTF = new JTextField();
	JTextField cityTF = new JTextField();
	JTextField stateTF = new JTextField();
	JTextField streetTF = new JTextField();
	JTextField zipTF = new JTextField();
	JTextField ccNumberTF = new JTextField();
	JTextField expiryDateTF = new JTextField();
	JTextField emailTF = new JTextField();
	JTextField birthDateTF = new JTextField();

	JButton okayBt = new JButton();
	JButton cancelBt = new JButton();

	JRadioButton copperRB = new JRadioButton();
	JRadioButton goldRB = new JRadioButton();
	JRadioButton silverRB = new JRadioButton();
    
	public JDialog_AddPersonalCCAccount(FinCoView parent, ICCardViewController controller) {
		super(parent);
		this.controller = controller;
		this.parent = parent;
		
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parses your Java file into its visual envirenment. 
		//{{ INIT_CONTROLS 
		setTitle("Add personal credit card account");
		setModal(true);
		getContentPane().setLayout(null);
		setSize(301,393);
		setVisible(false);

		goldRB.setText("Gold");
		goldRB.setActionCommand("Gold");
		getContentPane().add(goldRB);
		goldRB.setBounds(36,12,84,24);

		silverRB.setText("Silver");
		silverRB.setActionCommand("Silver");
		getContentPane().add(silverRB);
		silverRB.setBounds(36,36,84,24);

		copperRB.setText("Copper");
		copperRB.setActionCommand("Copper");
		getContentPane().add(copperRB);
		copperRB.setBounds(36,60,84,24);

		nameLb.setText("Name");
		getContentPane().add(nameLb);
		nameLb.setForeground(Color.black);
		nameLb.setBounds(12,108,48,24);

		streetLb.setText("Street");
		getContentPane().add(streetLb);
		streetLb.setForeground(Color.black);
		streetLb.setBounds(12,132,48,24);

		cityLb.setText("City");
		getContentPane().add(cityLb);
		cityLb.setForeground(Color.black);
		cityLb.setBounds(12,156,48,24);

		stateLb.setText("State");
		getContentPane().add(stateLb);
		stateLb.setForeground(Color.black);
		stateLb.setBounds(12,180,48,24);

		zipLb.setText("Zip");
		getContentPane().add(zipLb);
		zipLb.setForeground(Color.black);
		zipLb.setBounds(12,204,48,24);

		emailLb.setText("Email");
		getContentPane().add(emailLb);
		emailLb.setForeground(Color.black);
		emailLb.setBounds(12,228,48,24);

		ccNumberLb.setText("CC number");
		getContentPane().add(ccNumberLb);
		ccNumberLb.setForeground(Color.black);
		ccNumberLb.setBounds(12,252,96,24);

		expiryDateLb.setText("Exp. Date");
		getContentPane().add(expiryDateLb);
		expiryDateLb.setForeground(Color.black);
		expiryDateLb.setBounds(12,276,72,24);

		birthDateLb.setText("BirthDate");
		getContentPane().add(birthDateLb);
		birthDateLb.setForeground(Color.black);
		birthDateLb.setBounds(12,300,72,24);

		getContentPane().add(nameTF);
		nameTF.setBounds(84,108,156,20);

		getContentPane().add(streetTF);
		streetTF.setBounds(84,132,156,20);

		getContentPane().add(cityTF);
		cityTF.setBounds(84,156,156,20);

		getContentPane().add(stateTF);
		stateTF.setBounds(84,180,156,20);

		getContentPane().add(zipTF);
		zipTF.setBounds(84,204,156,20);

		getContentPane().add(emailTF);
		emailTF.setBounds(84,228,156,20);

		getContentPane().add(ccNumberTF);
		ccNumberTF.setBounds(84,252,156,20);

		getContentPane().add(expiryDateTF);
		expiryDateTF.setBounds(84,276,156,20);

		getContentPane().add(birthDateTF);
		birthDateTF.setBounds(84,300,156,20);

		okayBt.setText("OK");
		okayBt.setActionCommand("OK");
		getContentPane().add(okayBt);
		okayBt.setBounds(48,332,84,24);

		cancelBt.setText("Cancel");
		cancelBt.setActionCommand("Cancel");
		getContentPane().add(cancelBt);
		cancelBt.setBounds(156,332,84,24);

		//{{REGISTER_LISTENERS
		SymMouse aSymMouse = new SymMouse();
		goldRB.addMouseListener(aSymMouse);
		silverRB.addMouseListener(aSymMouse);
		copperRB.addMouseListener(aSymMouse);

		SymAction lSymAction = new SymAction();
		okayBt.addActionListener(lSymAction);
		cancelBt.addActionListener(lSymAction);
		//}}
	}


	class SymMouse extends java.awt.event.MouseAdapter {
		public void mouseClicked(java.awt.event.MouseEvent event) {
			Object object = event.getSource();
			if (object == goldRB)
				goldRBMouseClicked(event);
			else if (object == silverRB)
				silverRBMouseClicked(event);
			else if (object == copperRB)
				copperRBMouseClicked(event);


		}
	}

	void goldRBMouseClicked(java.awt.event.MouseEvent event) {
		goldRB.setSelected(true);
		silverRB.setSelected(false);
		copperRB.setSelected(false);
	}

	void silverRBMouseClicked(java.awt.event.MouseEvent event) {
		goldRB.setSelected(false);
		silverRB.setSelected(true);
		copperRB.setSelected(false);

	}
	void copperRBMouseClicked(java.awt.event.MouseEvent event) {
		goldRB.setSelected(false);
		silverRB.setSelected(false);
		copperRB.setSelected(true);
	}

	class SymAction implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent event) {
			Object object = event.getSource();
			if (object == okayBt)
				okayBtActionPerformed(event);
			else if (object == cancelBt)
				cancelBtActionPerformed(event);
		}
	}

	void okayBtActionPerformed(java.awt.event.ActionEvent event) {
		String clientName = nameTF.getText().trim();
		String street = streetTF.getText().trim();
		String city = cityTF.getText().trim();
		int zip;
		try {
			zip = Integer.parseInt(zipTF.getText().trim());
		} catch (NumberFormatException e) {
			e.printStackTrace();
			zip = 0;
		}
		String state = stateTF.getText().trim();
		String ccNumber = ccNumberTF.getText().trim();
		String expiryDate = expiryDateTF.getText().trim();
		String email = emailTF.getText().trim();
		String birthDate = birthDateTF.getText().trim();

		CreditCardType cardType;

		if (goldRB.isSelected())
			cardType = new Gold();
		else if (silverRB.isSelected())
			cardType = new Silver();
		else
			cardType = new Copper();

		this.controller.createPersonalAccount(ccNumber, clientName, street, city, state, zip, email, birthDate, expiryDate, cardType);
		this.parent.newaccount = true;

		//this.parent.viewController.getFrameworkApplication().getFinCo().getRepository().write(null);

		dispose();
	}

	void cancelBtActionPerformed(java.awt.event.ActionEvent event) {
		// make this frame invisible if Cancel button is clicked
		dispose();
	}
}
